openapi: 3.0.3
info:
  version: "1.0"
  title: API
  description: API
servers:
  - url: /api
tags:
  - name: Authentication
  - name: Locales
  - name: Interface languages
  - name: Content languages
  - name: Access rights
  - name: Group access rights
  - name: Users
  - name: Artists
  - name: Groups
  - name: Tags
  - name: Books
  - name: Volumes
  - name: Chapters
  - name: Pages
  - name: Bookmarks
  - name: Favorites
  - name: Views
components:
  headers:
    X-Pagination-Pages-Count:
      description: Pages count
      schema:
        type: integer
        minimum: 1
    X-Pagination-Page-Number:
      description: Page number
      schema:
        type: integer
        minimum: 1
    X-Pagination-Page-Items-Count:
      description: Items count on current page
      schema:
        type: integer
        default: 50
        minimum: 1
        maximum: 50
    X-Pagination-Total-Items-Count:
      description: Total items count
      schema:
        type: integer
        minimum: 1
  parameters:
    id:
      in: path
      name: id
      required: true
      description: ID
      schema:
        type: integer
    tag_id:
      in: path
      name: tag_id
      required: true
      description: Tag ID
      schema:
        type: integer
    book_id:
      in: path
      name: book_id
      required: true
      description: Book ID
      schema:
        type: integer
    chapter_id:
      in: path
      name: chapter_id
      required: true
      description: Chapter ID
      schema:
        type: integer
    page_id:
      in: path
      name: page_id
      required: true
      description: Page ID
      schema:
        type: integer
    artist_id:
      in: path
      name: artist_id
      required: true
      description: Artist ID
      schema:
        type: integer
    group_id:
      in: path
      name: group_id
      required: true
      description: Group ID
      schema:
        type: integer
    page:
      in: query
      name: page
      required: false
      description: Page number
      schema:
        type: integer
        minimum: 1
    limit:
      in: query
      name: limit
      required: false
      description: The number of items to return
      schema:
        type: integer
        default: 50
        minimum: 1
        maximum: 50
  responses:
    no_content:
      description: No content
      content:
        application/json:
          schema:
            type: integer
    unauthorized:
      description: Unauthorized access
      content:
        application/json:
          schema:
            type: object
            required:
              - error
            properties:
              error:
                type: string
                description: Error message
            example:
              error: Unauthorized
    forbidden:
      description: Access forbidden
      content:
        application/json:
          schema:
            type: object
            required:
              - error
            properties:
              error:
                type: string
                description: Error message
            example:
              error: Forbidden
    not_found:
      description: Not found
      content:
        application/json:
          schema:
            type: object
            required:
              - error
            properties:
              error:
                type: string
                description: Error message
            example:
              error: Not Found
    unprocessable_entity:
      description: Unprocessable entity
      content:
        application/json:
          schema:
            type: object
            required:
              - error
            properties:
              attribute:
                type: array
                items:
                  type: string
            example:
              attribute: Attribute invalid
    internal_server_error:
      description: Internal Server Error
      content:
        application/json:
          schema:
            type: integer
  schemas:
    access_right:
      type: object
      title: Access right
      properties:
        id:
          type: integer
          description: ID
        key:
          type: string
          enum:
            - manage_system_settings
            - manage_users
            - manage_books
          description: Key
      example:
        id: 1
        key: manage_books
    artist:
      type: object
      title: Artist
      properties:
        id:
          type: integer
          description: ID
        user_id:
          type: integer
          nullable: true
          description: User ID
        name:
          type: string
          description: Name
        favorites_count:
          type: integer
          description: Favorites count
      example:
        id: 1
        user_id: 1
        name: Akihito Tsukushi
        favorites_count: 1
    bookmark:
      type: object
      title: Bookmark
      properties:
        id:
          type: integer
          description: ID
        user_id:
          type: integer
          description: User ID
        resource_type:
          type: string
          enum:
            - Book
            - Chapter
            - Page
          description: Resource type
        resource_id:
          type: integer
          description: Resource ID
      example:
        id: 1
        user_id: 1
        resource_type: Book
        resource_id: 1
    chapter:
      type: object
      title: Chapter
      properties:
        id:
          type: integer
          description: ID
        content_language_id:
          description: Content language ID
          type: integer
        book_id:
          description: Book ID
          type: integer
        group_id:
          type: integer
          description: Group ID
        title:
          type: string
          description: Book
        number:
          type: integer
          description: Number
        status:
          type: string
          enum:
            - draft
            - review
            - published
          description: Status
        pages_count:
          type: integer
          description: Pages count
        cover:
          nullable: true
          oneOf:
            - $ref: "#/components/schemas/file"
        artists:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/resource_artist"
      example:
        id: 1
        content_language_id: 1
        book_id: 1
        group_id: 1
        name: Title
        number: 1
        status: draft
        pages_count: 1
    cleaner:
      type: object
      title: Cleaner
      properties:
        id:
          type: integer
          description: ID
        user_id:
          nullable: true
          type: integer
          description: User ID
        artist_id:
          type: integer
          description: Artist ID
        name:
          type: string
          description: Name
      example:
        id: 1
        user_id: 1
        artist_id: 1
        name: Akihito Tsukushi
    content_language:
      type: object
      title: Content language
      properties:
        id:
          type: integer
          description: ID
        locale_id:
          type: integer
          description: Locale ID
        title:
          type: string
          description: Title
      example:
        id: 1
        locale_id: 1
        title: English
    editor:
      type: object
      title: Editor
      properties:
        id:
          type: integer
          description: ID
        user_id:
          description: User ID
          type: integer
          nullable: true
        artist_id:
          type: integer
          description: Artist ID
        name:
          type: string
          description: Name
      example:
        id: 1
        user_id: 1
        artist_id: 1
        name: Akihito Tsukushi
    favorite:
      type: object
      title: Favorite
      properties:
        id:
          type: integer
          description: ID
        user_id:
          type: integer
          description: User ID
        resource_type:
          type: string
          enum:
            - Book
            - Group
            - Artist
          description: Resource type
        resource_id:
          type: integer
          description: Resource ID
      example:
        id: 1
        user_id: 1
        resource_type: Book
        resource_id: 1Tags IDsTags IDsTags IDsTags IDsTags IDs
    file:
      type: object
      title: File
      description: File
      properties:
        url:
          type: string
          description: Link
        content_type:
          type: string
          description: Content type
        width:
          type: integer
          description: Width
          nullable: true
        height:
          type: integer
          description: Height
          nullable: true
      example:
        url: "http://example.com/eyJ...3d6/file.jpg"
        content_type: image/jpeg
        width: 1600
        height: 2260
    group:
      type: object
      title: Group
      properties:
        id:
          type: integer
          description: ID
        title:
          type: string
          description: Title
        created_at:
          type: string
          format: date-time
          description: Date of creation
      example:
        id: 1
        title: Developers
        created_at: 2020-12-13T00:00:00.000Z
    group_access_right:
      type: object
      title: Group access right
      properties:
        id:
          type: integer
          description: ID
        key:
          type: string
          description: Key
          enum:
            - manage_group
            - manage_users
            - manage_chapters
      example:
        id: 1
        key: manage_group
    group_user:
      type: object
      title: Group user
      properties:
        id:
          type: integer
          description: ID
        group_id:
          type: integer
          description: Group ID
        user_id:
          type: integer
          description: User ID
        group:
          $ref: "#/components/schemas/group"
        user:
          $ref: "#/components/schemas/user"
        group_access_rights:
          type: array
          description: Group access rights
          items:
            $ref: "#/components/schemas/group_access_right"
      example:
        id: 1
        group_id: 1
        user_id: 1
    interface_language:
      type: object
      title: Interface language
      properties:
        id:
          type: integer
          description: ID
        locale_id:
          type: integer
          description: Locale ID
        title:
          type: string
          description: Title
      example:
        id: 1
        locale_id: 1
        title: English
    locale:
      type: object
      title: Locale
      properties:
        id:
          type: integer
          description: ID
        key:
          type: string
          description: Locale key
      example:
        id: 1
        key: en
    page:
      type: object
      title: Page
      properties:
        id:
          type: integer
          description: ID
        chapter_id:
          description: Chapter ID
          type: integer
        number:
          type: integer
          description: Number
        file:
          $ref: "#/components/schemas/file"
      example:
        id: 1
        chapter_id: 1
        number: 1
    painter:
      type: object
      title: Painter
      properties:
        id:
          type: integer
          description: ID
        user_id:
          description: User ID
          type: integer
          nullable: true
        artist_id:
          type: integer
          description: Artist ID
        name:
          type: string
          description: Name
      example:
        id: 1
        user_id: 1
        artist_id: 1
        name: Akihito Tsukushi
    tag:
      type: object
      title: Tag
      properties:
        id:
          type: integer
          description: ID
        key:
          type: string
          description: Key
        title:
          type: string
          description: Title
        description:
          type: string
          description: Description
      example:
        id: 1
        key: adventure
        title: Adventure
        description: Description
    resource_artist:
      type: object
      title: Resource artist
      properties:
        id:
          type: integer
          description: ID
        artist_id:
          type: integer
          description: Artist ID
        artist_type:
          type: string
          description: Artist ID
          enum:
            - writer
            - painter
            - cleaner
            - translator
            - editor
            - typer
        resource_id:
          type: integer
          description: Resource ID
        resource_type:
          type: string
          description: Resource ID
          enum:
            - Book
            - Chapter
        artist:
          $ref: "#/components/schemas/artist"
      example:
        id: 1
        artist_id: 1
        artist_type: writer
        resource_id: 1
        resource_type: Book
    resource_tag:
      type: object
      title: Resource tag
      properties:
        id:
          type: integer
          description: ID
        tag_id:
          type: integer
          description: tag ID
        tag_type:
          type: string
          description: tag ID
          enum:
            - demographic
            - format
            - genre
            - mark
            - theme
        resource_id:
          type: integer
          description: Resource ID
        resource_type:
          type: string
          description: Resource type
          enum:
            - Book
        tag:
          $ref: "#/components/schemas/tag"
      example:
        id: 1
        tag_id: 1
        tag_type: writer
        resource_id: 1
        resource_type: Book
    book:
      type: object
      title: Book
      properties:
        id:
          type: integer
          description: ID
        original_content_language_id:
          description: Original content language ID
          type: integer
          nullable: true
        title:
          type: string
          description: Title
        description:
          type: string
          description: Description
        status:
          type: string
          description: Status
          enum:
            - draft
            - review
            - published
        publication_status:
          type: string
          description: Publication status
          enum:
            - ongoing
            - completed
            - cancelled
        cover:
          nullable: true
          oneOf:
            - $ref: "#/components/schemas/file"
        artists:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/resource_artist"
        tags:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/resource_tag"
      example:
        id: 1
        original_content_language_id: 1
        title: Made in Abyss
        description: Description
        status: published
        publication_status: ongoing
    translator:
      type: object
      title: Translator
      properties:
        id:
          type: integer
          description: ID
        user_id:
          description: User ID
          type: integer
          nullable: true
        artist_id:
          type: integer
          description: Artist ID
        name:
          type: string
          description: Name
      example:
        id: 1
        user_id: 1
        artist_id: 1
        name: Akihito Tsukushi
    typer:
      type: object
      title: Typer
      properties:
        id:
          type: integer
          description: ID
        user_id:
          description: User ID
          type: integer
          nullable: true
        artist_id:
          type: integer
          description: Artist ID
        name:
          type: string
          description: Name
      example:
        id: 1
        user_id: 1
        artist_id: 1
        name: Akihito Tsukushi
    user:
      type: object
      title: User
      properties:
        id:
          type: integer
          description: ID
        username:
          type: string
          description: Username
        name:
          type: string
          description: Name
          nullable: true
        surname:
          type: string
          description: Surname
          nullable: true
        avatar:
          nullable: true
          oneOf:
            - $ref: "#/components/schemas/file"
        access_rights:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/access_right"
      example:
        id: 1
        username: riko
        name: Riko
        surname: Unknown
    user_settings:
      type: object
      title: User
      properties:
        id:
          type: integer
          description: ID
        user_id:
          type: integer
          description: User ID
        interface_language_id:
          type: integer
          description: Interface language ID
        name:
          type: string
          description: Name
        surname:
          type: string
          description: Surname
        sex:
          type: string
          enum:
            - male
            - female
            - other
          description: Sex
        excluded_tags:
          type: array
          items:
            $ref: "#/components/schemas/tag"
        content_languages:
          type: array
          items:
            $ref: "#/components/schemas/content_language"
        avatar:
          nullable: true
          oneOf:
            - $ref: "#/components/schemas/file"
      example:
        id: 1
        user_id: 1
        interface_language_id: 1
        name: Riko
        surname: Unknown
        sex: female
    view:
      type: object
      title: View
      properties:
        id:
          type: integer
          description: ID
        user_id:
          type: integer
          description: User ID
        resource_type:
          type: string
          description: Resource type
          enum:
            - Book
            - Chapter
            - Page
        resource_id:
          type: integer
          description: Resource ID
      example:
        id: 1
        user_id: 1
        resource_type: Book
        resource_id: 1
    volume:
      type: object
      title: Volume
      properties:
        id:
          type: integer
          description: ID
        book_id:
          description: Book ID
          type: integer
        number:
          type: integer
          description: Number
      example:
        id: 1
        book_id: 1
        number: 1
    writer:
      type: object
      title: Writer
      properties:
        id:
          type: integer
          description: ID
        user_id:
          description: User ID
          type: integer
          nullable: true
        artist_id:
          type: integer
          description: Artist ID
        name:
          type: string
          description: Name
      example:
        id: 1
        user_id: 1
        artist_id: 1
        name: Akihito Tsukushi
paths:
  /sign_up.json:
    post:
      tags:
        - Authentication
      summary: Sign up
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: Username
                email:
                  type: string
                  description: Email
                password:
                  type: string
                  description: Password
              example:
                username: riko
                email: riko@example.com
                password: password
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/user"
        "403":
          $ref: "#/components/responses/forbidden"
        "422":
          $ref: "#/components/responses/unprocessable_entity"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /sign_in.json:
    post:
      tags:
        - Authentication
      summary: Sign in
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: Username
                password:
                  type: string
                  description: Password
              example:
                username: riko
                password: password
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/user"
        "403":
          $ref: "#/components/responses/forbidden"
        "422":
          $ref: "#/components/responses/unprocessable_entity"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /sign_out.json:
    delete:
      tags:
        - Authentication
      summary: Sign out
      description: ""
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /locales.json:
    get:
      tags:
        - Locales
      summary: Locales
      description: ""
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/locale"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "500":
          $ref: "#/components/responses/internal_server_error"
    post:
      tags:
        - Locales
      summary: Create
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                key:
                  type: string
                  description: Key
              example:
                key: en
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/locale"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "422":
          $ref: "#/components/responses/unprocessable_entity"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /locales/{id}.json:
    get:
      tags:
        - Locales
      summary: Locale
      description: ""
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/locale"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/internal_server_error"
    delete:
      tags:
        - Locales
      summary: Delete
      description: ""
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/unprocessable_entity"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /interface_languages.json:
    get:
      tags:
        - Interface languages
      summary: Interface languages
      description: Sorted by id ASC
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/interface_language"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "500":
          $ref: "#/components/responses/internal_server_error"
    post:
      tags:
        - Interface languages
      summary: Create
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                locale_id:
                  type: integer
                  description: Locale ID
                title:
                  type: string
                  description: Title
              example:
                locale_id: 1
                title: Title
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/interface_language"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "422":
          $ref: "#/components/responses/unprocessable_entity"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /interface_languages/{id}.json:
    get:
      tags:
        - Interface languages
      summary: Interface language
      description: ""
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/interface_language"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/internal_server_error"
    put:
      tags:
        - Interface languages
      summary: Update
      description: ""
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: Title
              example:
                title: Title
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/interface_language"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/unprocessable_entity"
        "500":
          $ref: "#/components/responses/internal_server_error"
    delete:
      tags:
        - Interface languages
      summary: Delete
      description: ""
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/unprocessable_entity"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /content_languages.json:
    get:
      tags:
        - Content languages
      summary: Content languages
      description: Sorted by id ASC
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/content_language"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "500":
          $ref: "#/components/responses/internal_server_error"
    post:
      tags:
        - Content languages
      summary: Create
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                locale_id:
                  type: integer
                  description: Locale ID
                title:
                  type: string
                  description: Title
              example:
                locale_id: 1
                title: Title
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/content_language"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "422":
          $ref: "#/components/responses/unprocessable_entity"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /content_languages/{id}.json:
    get:
      tags:
        - Content languages
      summary: Content language
      description: ""
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/content_language"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/internal_server_error"
    put:
      tags:
        - Content languages
      summary: Update
      description: ""
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: Title
              example:
                title: Title
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/content_language"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/unprocessable_entity"
        "500":
          $ref: "#/components/responses/internal_server_error"
    delete:
      tags:
        - Content languages
      summary: Delete
      description: ""
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/unprocessable_entity"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /access_rights.json:
    get:
      tags:
        - Access rights
      summary: Access rights
      description: Sorted by id ASC
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/access_right"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /access_rights/{id}.json:
    get:
      tags:
        - Access rights
      summary: Access right
      description: ""
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/access_right"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /group access_rights.json:
    get:
      tags:
        - Group access rights
      summary: Group access rights
      description: Sorted by id ASC
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/group_access_right"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /group access_rights/{id}.json:
    get:
      tags:
        - Group access rights
      summary: Group access right
      description: ""
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/group_access_right"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /tags.json:
    get:
      tags:
        - Tags
      summary: Tags
      description: Sorted by title ASC
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/tag"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "500":
          $ref: "#/components/responses/internal_server_error"
    post:
      tags:
        - Tags
      summary: Create
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                key:
                  type: string
                  description: Key
                title:
                  type: string
                  description: Title
                description:
                  type: string
                  description: Description
              example:
                key: Adventure
                title: Title
                description: Description
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/tag"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "422":
          $ref: "#/components/responses/unprocessable_entity"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /tags/{id}.json:
    get:
      tags:
        - Tags
      summary: Tag
      description: ""
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/tag"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/internal_server_error"
    put:
      tags:
        - Tags
      summary: Update
      description: ""
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                key:
                  type: string
                  description: adventure
                title:
                  type: string
                  description: Adventure
                description:
                  type: string
                  description: Description
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/tag"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/unprocessable_entity"
        "500":
          $ref: "#/components/responses/internal_server_error"
    delete:
      tags:
        - Tags
      summary: Delete
      description: ""
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/unprocessable_entity"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /books.json:
    get:
      tags:
        - Books
      summary: Books
      description: Sorted by title ASC
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          description: Success
          headers:
            X-Pagination-Page-Number:
              $ref: "#/components/headers/X-Pagination-Page-Number"
            X-Pagination-Page-Items-Count:
              $ref: "#/components/headers/X-Pagination-Page-Items-Count"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/book"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "500":
          $ref: "#/components/responses/internal_server_error"
    post:
      tags:
        - Books
      summary: Create
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: Title
                description:
                  type: string
                  description: Description
                publication_status:
                  type: string
                  description: Publication status
                  enum:
                    - ongoing
                    - completed
                    - cancelled
                original_content_language_id:
                  type: integer
                  description: Original content language ID
                writer_ids:
                  type: array
                  description: Artists IDs
                  items:
                    type: integer
                painter_ids:
                  type: array
                  description: Artists IDs
                  items:
                    type: integer
                genre_ids:
                  type: array
                  description: Tags IDs
                  items:
                    type: integer
                format_ids:
                  type: array
                  description: Tags IDs
                  items:
                    type: integer
                demographic_ids:
                  type: array
                  description: Tags IDs
                  items:
                    type: integer
                mark_ids:
                  type: array
                  description: Tags IDs
                  items:
                    type: integer
                theme_ids:
                  type: array
                  description: Tags IDs
                  items:
                    type: integer
              example:
                title: Made in Abyss
                description: Awesome manga
                publication_status: ongoing
                original_content_language_id: 1
                writer_ids:
                  - 1
                painter_ids:
                  - 2
                genre_ids:
                  - 3
                  - 4
                  - 5
                  - 6
                format_ids:
                  - 7
                demographic_ids:
                  - 8
                mark_ids:
                  - 9
                  - 10
                theme_ids:
                  - 11
                  - 12
                  - 13
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/book"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "422":
          $ref: "#/components/responses/unprocessable_entity"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /books/{id}.json:
    get:
      tags:
        - Books
      summary: Book
      description: ""
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/book"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/internal_server_error"
    put:
      tags:
        - Books
      summary: Update
      description: ""
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: Title
                description:
                  type: string
                  description: Description
                publication_status:
                  type: string
                  description: Publication status
                  enum:
                    - ongoing
                    - completed
                    - cancelled
                original_content_language_id:
                  type: integer
                  description: Original content language
                writer_ids:
                  type: array
                  description: Artists IDs
                  items:
                    type: integer
                painter_ids:
                  type: array
                  description: Artists IDs
                  items:
                    type: integer
                genre_ids:
                  type: array
                  description: Tags IDs
                  items:
                    type: integer
                format_ids:
                  type: array
                  description: Tags IDs
                  items:
                    type: integer
                demographic_ids:
                  type: array
                  description: Tags IDs
                  items:
                    type: integer
                mark_ids:
                  type: array
                  description: Tags IDs
                  items:
                    type: integer
                theme_ids:
                  type: array
                  description: Tags IDs
                  items:
                    type: integer
              example:
                title: Made in Abyss
                description: Awesome manga
                publication_status: ongoing
                original_content_language_id: 1
                writer_ids:
                  - 1
                painter_ids:
                  - 2
                genre_ids:
                  - 3
                  - 4
                  - 5
                  - 6
                format_ids:
                  - 7
                demographic_ids:
                  - 8
                mark_ids:
                  - 9
                  - 10
                theme_ids:
                  - 11
                  - 12
                  - 13
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/book"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "422":
          $ref: "#/components/responses/unprocessable_entity"
        "500":
          $ref: "#/components/responses/internal_server_error"
    delete:
      tags:
        - Books
      summary: Delete
      description: ""
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/unprocessable_entity"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /books/{book_id}/to_review.json:
    put:
      tags:
        - Books
      summary: Send to review
      description: ""
      parameters:
        - $ref: "#/components/parameters/book_id"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/book"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/unprocessable_entity"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /books/{book_id}/to_draft.json:
    put:
      tags:
        - Books
      summary: Send to draft
      description: ""
      parameters:
        - $ref: "#/components/parameters/book_id"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/book"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/unprocessable_entity"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /books/{book_id}/to_published.json:
    put:
      tags:
        - Books
      summary: Send to published
      description: ""
      parameters:
        - $ref: "#/components/parameters/book_id"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/book"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/unprocessable_entity"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /books/{book_id}/cover.json:
    put:
      tags:
        - Books
      summary: Update cover
      description: ""
      parameters:
        - $ref: "#/components/parameters/book_id"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: File
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/book"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/unprocessable_entity"
        "500":
          $ref: "#/components/responses/internal_server_error"
    delete:
      tags:
        - Books
      summary: Delete cover
      description: ""
      parameters:
        - $ref: "#/components/parameters/book_id"
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/unprocessable_entity"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /books/{book_id}/volumes.json:
    get:
      tags:
        - Volumes
      summary: Volumes
      description: Sorted by number ASC
      parameters:
        - $ref: "#/components/parameters/book_id"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/volume"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/internal_server_error"
    post:
      tags:
        - Volumes
      summary: Create
      description: ""
      parameters:
        - $ref: "#/components/parameters/book_id"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                number:
                  type: integer
                  description: Number
              example:
                number: 1
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/volume"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "422":
          $ref: "#/components/responses/unprocessable_entity"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /books/{book_id}/volumes/{id}.json:
    get:
      tags:
        - Volumes
      summary: Volume
      description: ""
      parameters:
        - $ref: "#/components/parameters/book_id"
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/volume"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/internal_server_error"
    put:
      tags:
        - Volumes
      summary: Update
      description: ""
      parameters:
        - $ref: "#/components/parameters/book_id"
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                number:
                  type: integer
                  description: Number
              example:
                number: 1
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/volume"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "422":
          $ref: "#/components/responses/unprocessable_entity"
        "500":
          $ref: "#/components/responses/internal_server_error"
    delete:
      tags:
        - Volumes
      summary: Delete
      description: ""
      parameters:
        - $ref: "#/components/parameters/book_id"
        - $ref: "#/components/parameters/id"
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/unprocessable_entity"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /books/{book_id}/chapters.json:
    get:
      tags:
        - Chapters
      summary: Chapters
      description: Sorted by number ASC
      parameters:
        - $ref: "#/components/parameters/book_id"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/chapter"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/internal_server_error"
    post:
      tags:
        - Chapters
      summary: Create
      description: ""
      parameters:
        - $ref: "#/components/parameters/book_id"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: Title
                number:
                  type: integer
                  description: Number
                volume_id:
                  type: integer
                  description: Volume ID
                group_id:
                  type: integer
                  description: Group ID
                cleaners_ids:
                  type: array
                  description: Artists IDs
                  items:
                    type: integer
                translators_ids:
                  type: array
                  description: Artists IDs
                  items:
                    type: integer
                editors_ids:
                  type: array
                  description: Artists IDs
                  items:
                    type: integer
                typers_ids:
                  type: array
                  description: Artists IDs
                  items:
                    type: integer
              example:
                name: Title
                number: 1
                volume_id: 1
                group_id: 1
                cleaners_ids:
                  - 1
                  - 2
                  - 3
                translators_ids:
                  - 4
                  - 5
                editors_ids:
                  - 6
                typers_ids:
                  - 7
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/chapter"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "422":
          $ref: "#/components/responses/unprocessable_entity"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /books/{book_id}/chapters/{id}.json:
    get:
      tags:
        - Chapters
      summary: Chapter
      description: ""
      parameters:
        - $ref: "#/components/parameters/book_id"
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/chapter"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/internal_server_error"
    put:
      tags:
        - Chapters
      summary: Update
      description: ""
      parameters:
        - $ref: "#/components/parameters/book_id"
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: Title
                number:
                  type: integer
                  description: Number
                volume_id:
                  type: integer
                  description: Volume ID
                cleaners_ids:
                  type: array
                  description: Artists IDs
                  items:
                    type: integer
                translators_ids:
                  type: array
                  description: Artists IDs
                  items:
                    type: integer
                editors_ids:
                  type: array
                  description: Artists IDs
                  items:
                    type: integer
                typers_ids:
                  type: array
                  description: Artists IDs
                  items:
                    type: integer
              example:
                name: "Orth, City on the Edge"
                number: 1
                volume_id: 1
                cleaners_ids:
                  - 1
                translators_ids:
                  - 2
                  - 3
                editors_ids:
                  - 4
                  - 5
                  - 6
                typers_ids:
                  - 7
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/chapter"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "422":
          $ref: "#/components/responses/unprocessable_entity"
        "500":
          $ref: "#/components/responses/internal_server_error"
    delete:
      tags:
        - Chapters
      summary: Delete
      description: ""
      parameters:
        - $ref: "#/components/parameters/book_id"
        - $ref: "#/components/parameters/id"
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/unprocessable_entity"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /books/{book_id}/chapters/{chapter_id}/to_review.json:
    put:
      tags:
        - Chapters
      summary: Send to review
      description: ""
      parameters:
        - $ref: "#/components/parameters/book_id"
        - $ref: "#/components/parameters/chapter_id"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/chapter"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/unprocessable_entity"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /books/{book_id}/chapters/{chapter_id}/to_draft.json:
    put:
      tags:
        - Chapters
      summary: Send to draft
      description: ""
      parameters:
        - $ref: "#/components/parameters/book_id"
        - $ref: "#/components/parameters/chapter_id"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/chapter"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/unprocessable_entity"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /books/{book_id}/chapters/{chapter_id}/to_published.json:
    put:
      tags:
        - Chapters
      summary: Send to published
      description: ""
      parameters:
        - $ref: "#/components/parameters/book_id"
        - $ref: "#/components/parameters/chapter_id"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/chapter"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/unprocessable_entity"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /books/{book_id}/views.json:
    post:
      tags:
        - Books
      summary: Create view
      description: ""
      parameters:
        - $ref: "#/components/parameters/book_id"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/view"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/unprocessable_entity"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /books/{book_id}/bookmarks.json:
    post:
      tags:
        - Books
      summary: Create bookmark
      description: ""
      parameters:
        - $ref: "#/components/parameters/book_id"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/bookmark"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/unprocessable_entity"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /books/{book_id}/bookmarks/{id}.json:
    delete:
      tags:
        - Books
      summary: Delete bookmark
      description: ""
      parameters:
        - $ref: "#/components/parameters/book_id"
        - $ref: "#/components/parameters/id"
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/unprocessable_entity"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /books/{book_id}/favorites.json:
    post:
      tags:
        - Books
      summary: Create favorite
      description: ""
      parameters:
        - $ref: "#/components/parameters/book_id"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/favorite"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/unprocessable_entity"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /books/{book_id}/favorites/{id}.json:
    delete:
      tags:
        - Books
      summary: Delete favorite
      description: ""
      parameters:
        - $ref: "#/components/parameters/book_id"
        - $ref: "#/components/parameters/id"
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/unprocessable_entity"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /books/{book_id}/chapters/{chapter_id}/cover.json:
    put:
      tags:
        - Chapters
      summary: Update cover
      description: ""
      parameters:
        - $ref: "#/components/parameters/book_id"
        - $ref: "#/components/parameters/chapter_id"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: File
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/chapter"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/unprocessable_entity"
        "500":
          $ref: "#/components/responses/internal_server_error"
    delete:
      tags:
        - Chapters
      summary: Delete cover
      description: ""
      parameters:
        - $ref: "#/components/parameters/book_id"
        - $ref: "#/components/parameters/chapter_id"
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/unprocessable_entity"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /books/{book_id}/chapters/{chapter_id}/views.json:
    post:
      tags:
        - Chapters
      summary: Create view
      description: ""
      parameters:
        - $ref: "#/components/parameters/book_id"
        - $ref: "#/components/parameters/chapter_id"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/view"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/unprocessable_entity"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /books/{book_id}/chapters/{chapter_id}/bookmarks.json:
    post:
      tags:
        - Chapters
      summary: Create bookmark
      description: ""
      parameters:
        - $ref: "#/components/parameters/book_id"
        - $ref: "#/components/parameters/chapter_id"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/bookmark"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/unprocessable_entity"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /books/{book_id}/chapters/{chapter_id}/bookmarks/{id}.json:
    delete:
      tags:
        - Chapters
      summary: Delete bookmark
      description: ""
      parameters:
        - $ref: "#/components/parameters/book_id"
        - $ref: "#/components/parameters/chapter_id"
        - $ref: "#/components/parameters/id"
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/unprocessable_entity"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /books/{book_id}/chapters/{chapter_id}/pages.json:
    get:
      tags:
        - Pages
      summary: Pages
      description: Sorted by number ASC
      parameters:
        - $ref: "#/components/parameters/book_id"
        - $ref: "#/components/parameters/chapter_id"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/page"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/internal_server_error"
    post:
      tags:
        - Pages
      summary: Create
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                number:
                  type: integer
                  description: Number
                file:
                  type: string
                  format: binary
                  description: File
              example:
                number: 1
                file: Binary data
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/page"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "422":
          $ref: "#/components/responses/unprocessable_entity"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /books/{book_id}/chapters/{chapter_id}/pages/{id}.json:
    get:
      tags:
        - Pages
      summary: Page
      description: ""
      parameters:
        - $ref: "#/components/parameters/book_id"
        - $ref: "#/components/parameters/chapter_id"
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/page"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /books/{book_id}/chapters/{chapter_id}/pages/{page_id}/views.json:
    post:
      tags:
        - Pages
      summary: Create view
      description: ""
      parameters:
        - $ref: "#/components/parameters/book_id"
        - $ref: "#/components/parameters/chapter_id"
        - $ref: "#/components/parameters/page_id"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/view"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/unprocessable_entity"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /books/{book_id}/chapters/{chapter_id}/pages/{page_id}/bookmarks.json:
    post:
      tags:
        - Pages
      summary: Create bookmark
      description: ""
      parameters:
        - $ref: "#/components/parameters/book_id"
        - $ref: "#/components/parameters/chapter_id"
        - $ref: "#/components/parameters/page_id"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/bookmark"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/unprocessable_entity"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /books/{book_id}/chapters/{chapter_id}/pages/{page_id}/bookmarks/{id}.json:
    delete:
      tags:
        - Pages
      summary: Delete bookmark
      description: ""
      parameters:
        - $ref: "#/components/parameters/book_id"
        - $ref: "#/components/parameters/chapter_id"
        - $ref: "#/components/parameters/page_id"
        - $ref: "#/components/parameters/id"
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/unprocessable_entity"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /users.json:
    get:
      tags:
        - Users
      summary: Users
      description: Sorted by username ASC
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          description: Success
          headers:
            X-Pagination-Page-Number:
              $ref: "#/components/headers/X-Pagination-Page-Number"
            X-Pagination-Page-Items-Count:
              $ref: "#/components/headers/X-Pagination-Page-Items-Count"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/user"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /users/{id}.json:
    get:
      tags:
        - Users
      summary: User
      description: ""
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/user"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /users/settings.json:
    get:
      tags:
        - Users
      summary: Settings
      description: ""
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user_settings"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "500":
          $ref: "#/components/responses/internal_server_error"
    put:
      tags:
        - Users
      summary: Update settings
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name
                surname:
                  type: string
                  description: Surname
                sex:
                  type: string
                  enum: ["male", "female", "other"]
                  description: Name
                avatar:
                  type: string
                  format: binary
                  description: Avatar
                interface_language_id:
                  type: integer
                  description: Interface language ID
                content_language_ids:
                  type: array
                  description: Content languages IDs
                  item:
                    type: integer
                excluded_tag_ids:
                  type: array
                  description: Excluded tags IDs
                  item:
                    type: integer
              example:
                name: Riko
                surname: Unknown
                sex: female
                avatar: Binary data
                interface_language_id: 1
                content_language_ids:
                  - 1
                excluded_tag_ids:
                  - 1
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user_settings"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "422":
          $ref: "#/components/responses/unprocessable_entity"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /users/access_rights.json:
    get:
      tags:
        - Users
      summary: Current user access rights
      description: ""
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/access_right"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /users/{user_id}/access_rights.json:
    get:
      tags:
        - Users
      summary: Access rights
      description: ""
      parameters:
        - $ref: "#/components/parameters/user_id"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/access_right"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/internal_server_error"
    put:
      tags:
        - Users
      summary: Update access rights
      description: ""
      parameters:
        - $ref: "#/components/parameters/user_id"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                access_right_ids:
                  type: array
                  description: Access rights IDs
                  items:
                    type: integer
              example:
                access_right_ids:
                  - 1
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/access_right"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/unprocessable_entity"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /users/bookmarks/books.json:
    get:
      tags:
        - Users
      summary: Bookmarked books
      description: Sorted by updated_at DESC
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          description: Success
          headers:
            X-Pagination-Page-Number:
              $ref: "#/components/headers/X-Pagination-Page-Number"
            X-Pagination-Page-Items-Count:
              $ref: "#/components/headers/X-Pagination-Page-Items-Count"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/book"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /users/bookmarks/chapters.json:
    get:
      tags:
        - Users
      summary: Bookmarked chapters
      description: Sorted by updated_at DESC
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          description: Success
          headers:
            X-Pagination-Page-Number:
              $ref: "#/components/headers/X-Pagination-Page-Number"
            X-Pagination-Page-Items-Count:
              $ref: "#/components/headers/X-Pagination-Page-Items-Count"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/chapter"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /users/bookmarks/pages.json:
    get:
      tags:
        - Users
      summary: Bookmarked pages
      description: Sorted by updated_at DESC
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          description: Success
          headers:
            X-Pagination-Page-Number:
              $ref: "#/components/headers/X-Pagination-Page-Number"
            X-Pagination-Page-Items-Count:
              $ref: "#/components/headers/X-Pagination-Page-Items-Count"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/page"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /users/favorites/artists.json:
    get:
      tags:
        - Users
      summary: Favorite artists
      description: Sorted by updated_at DESC
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          description: Success
          headers:
            X-Pagination-Page-Number:
              $ref: "#/components/headers/X-Pagination-Page-Number"
            X-Pagination-Page-Items-Count:
              $ref: "#/components/headers/X-Pagination-Page-Items-Count"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/artist"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /users/favorites/groups.json:
    get:
      tags:
        - Users
      summary: Favorite groups
      description: Sorted by updated_at DESC
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          description: Success
          headers:
            X-Pagination-Page-Number:
              $ref: "#/components/headers/X-Pagination-Page-Number"
            X-Pagination-Page-Items-Count:
              $ref: "#/components/headers/X-Pagination-Page-Items-Count"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/group"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /users/favorites/books.json:
    get:
      tags:
        - Users
      summary: Favorite books
      description: Sorted by updated_at DESC
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          description: Success
          headers:
            X-Pagination-Page-Number:
              $ref: "#/components/headers/X-Pagination-Page-Number"
            X-Pagination-Page-Items-Count:
              $ref: "#/components/headers/X-Pagination-Page-Items-Count"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/book"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /users/views/books.json:
    get:
      tags:
        - Users
      summary: Viewed books
      description: Sorted by updated_at DESC
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          description: Success
          headers:
            X-Pagination-Page-Number:
              $ref: "#/components/headers/X-Pagination-Page-Number"
            X-Pagination-Page-Items-Count:
              $ref: "#/components/headers/X-Pagination-Page-Items-Count"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/book"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /users/views/chapters.json:
    get:
      tags:
        - Users
      summary: Viewed chapters
      description: Sorted by updated_at DESC
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          description: Success
          headers:
            X-Pagination-Page-Number:
              $ref: "#/components/headers/X-Pagination-Page-Number"
            X-Pagination-Page-Items-Count:
              $ref: "#/components/headers/X-Pagination-Page-Items-Count"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/chapter"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /users/views/pages.json:
    get:
      tags:
        - Users
      summary: Viewed pages
      description: Sorted by updated_at DESC
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          description: Success
          headers:
            X-Pagination-Page-Number:
              $ref: "#/components/headers/X-Pagination-Page-Number"
            X-Pagination-Page-Items-Count:
              $ref: "#/components/headers/X-Pagination-Page-Items-Count"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/page"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /artists.json:
    get:
      tags:
        - Artists
      summary: Artists
      description: Sorted by title ASC
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          description: Success
          headers:
            X-Pagination-Page-Number:
              $ref: "#/components/headers/X-Pagination-Page-Number"
            X-Pagination-Page-Items-Count:
              $ref: "#/components/headers/X-Pagination-Page-Items-Count"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/artist"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "500":
          $ref: "#/components/responses/internal_server_error"
    post:
      tags:
        - Artists
      summary: Create
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: User ID
                name:
                  type: string
                  description: Name
              example:
                user_id: 1
                name: Name
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/artist"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "422":
          $ref: "#/components/responses/unprocessable_entity"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /artists/{id}.json:
    get:
      tags:
        - Artists
      summary: Artist
      description: ""
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/artist"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/internal_server_error"
    put:
      tags:
        - Artists
      summary: Update
      description: ""
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: User ID
                name:
                  type: string
                  description: Name
              example:
                user_id: 1
                name: Name
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/artist"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/unprocessable_entity"
        "500":
          $ref: "#/components/responses/internal_server_error"
    delete:
      tags:
        - Artists
      summary: Delete
      description: ""
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/unprocessable_entity"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /artists/{artist_id}/favorites.json:
    post:
      tags:
        - Artists
      summary: Create favorite
      description: ""
      parameters:
        - $ref: "#/components/parameters/artist_id"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/favorite"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/unprocessable_entity"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /artists/{artist_id}/favorites/{id}.json:
    delete:
      tags:
        - Artists
      summary: Delete favorite
      description: ""
      parameters:
        - $ref: "#/components/parameters/artist_id"
        - $ref: "#/components/parameters/id"
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/unprocessable_entity"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /groups.json:
    get:
      tags:
        - Groups
      summary: Groups
      description: Sorted by title ASC
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          description: Success
          headers:
            X-Pagination-Page-Number:
              $ref: "#/components/headers/X-Pagination-Page-Number"
            X-Pagination-Page-Items-Count:
              $ref: "#/components/headers/X-Pagination-Page-Items-Count"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/group"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "500":
          $ref: "#/components/responses/internal_server_error"
    post:
      tags:
        - Groups
      summary: Create
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: Title
              example:
                title: Developers
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/group"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "422":
          $ref: "#/components/responses/unprocessable_entity"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /groups/{id}.json:
    get:
      tags:
        - Groups
      summary: Group
      description: ""
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/group"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/internal_server_error"
    put:
      tags:
        - Groups
      summary: Update
      description: ""
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: Title
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/group"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/unprocessable_entity"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /groups/{group_id}/users.json:
    get:
      tags:
        - Groups
      summary: Group users
      description: ""
      parameters:
        - $ref: "#/components/parameters/group_id"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/group_user"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/internal_server_error"
    post:
      tags:
        - Groups
      summary: Create group user
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: User ID
                access_rights:
                  type: array
                  description: Access rights
                  items:
                    type: string
                    enum:
                      - manage_group
                      - manage_users
                      - manage_chapters
              example:
                user_id: 1
                access_rights:
                  - manage_group
                  - manage_users
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/group_user"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/unprocessable_entity"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /groups/{group_id}/users/{id}.json:
    get:
      tags:
        - Groups
      summary: Group user
      description: ""
      parameters:
        - $ref: "#/components/parameters/group_id"
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/group_user"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "500":
          $ref: "#/components/responses/internal_server_error"
    put:
      tags:
        - Groups
      summary: Update group user
      description: ""
      parameters:
        - $ref: "#/components/parameters/group_id"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                access_rights:
                  type: array
                  description: Access rights
                  items:
                    type: string
                    enum:
                      - manage_group
                      - manage_users
                      - manage_chapters
              example:
                access_rights: manage_group
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/group_user"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/responses/unprocessable_entity"
        "500":
          $ref: "#/components/responses/internal_server_error"
    delete:
      tags:
        - Groups
      summary: Delete group user
      description: ""
      parameters:
        - $ref: "#/components/parameters/group_id"
        - $ref: "#/components/parameters/id"
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/unprocessable_entity"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /groups/{group_id}/favorites.json:
    post:
      tags:
        - Groups
      summary: Create favorite
      description: ""
      parameters:
        - $ref: "#/components/parameters/group_id"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/favorite"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/unprocessable_entity"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /groups/{group_id}/favorites/{id}.json:
    delete:
      tags:
        - Groups
      summary: Delete favorite
      description: ""
      parameters:
        - $ref: "#/components/parameters/group_id"
        - $ref: "#/components/parameters/id"
      responses:
        "204":
          $ref: "#/components/responses/no_content"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/unprocessable_entity"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /bookmarks.json:
    get:
      tags:
        - Bookmarks
      summary: Bookmarks
      description: ""
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/limit"
        - in: query
          name: resource_type
          description: Resource type
          schema:
            type: string
            enum:
              - Book
              - Chapter
              - Page
        - in: query
          name: resource_ids
          description: Resource ids
          schema:
            type: array
            maximum: 150
            items:
              type: integer
      responses:
        "200":
          description: Success
          headers:
            X-Pagination-Page-Number:
              $ref: "#/components/headers/X-Pagination-Page-Number"
            X-Pagination-Page-Items-Count:
              $ref: "#/components/headers/X-Pagination-Page-Items-Count"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/bookmark"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "422":
          $ref: "#/components/responses/unprocessable_entity"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /favorites.json:
    get:
      tags:
        - Favorites
      summary: Favorites
      description: ""
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/limit"
        - in: query
          name: resource_type
          description: Resource type
          schema:
            type: string
            enum:
              - Book
              - Chapter
              - Page
        - in: query
          name: resource_ids
          description: Resource ids
          schema:
            type: array
            maximum: 150
            items:
              type: integer
      responses:
        "200":
          description: Success
          headers:
            X-Pagination-Page-Number:
              $ref: "#/components/headers/X-Pagination-Page-Number"
            X-Pagination-Page-Items-Count:
              $ref: "#/components/headers/X-Pagination-Page-Items-Count"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/favorite"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "422":
          $ref: "#/components/responses/unprocessable_entity"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /views.json:
    get:
      tags:
        - Views
      summary: Views
      description: ""
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/limit"
        - in: query
          name: resource_type
          description: Resource type
          schema:
            type: string
            enum:
              - Book
              - Chapter
              - Page
        - in: query
          name: resource_ids
          description: Resource ids
          schema:
            type: array
            maximum: 150
            items:
              type: integer
      responses:
        "200":
          description: Success
          headers:
            X-Pagination-Page-Number:
              $ref: "#/components/headers/X-Pagination-Page-Number"
            X-Pagination-Page-Items-Count:
              $ref: "#/components/headers/X-Pagination-Page-Items-Count"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/view"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "422":
          $ref: "#/components/responses/unprocessable_entity"
        "500":
          $ref: "#/components/responses/internal_server_error"